{#-
  Jinja2 Template for a Pandera class-based model
  Details at https://pandera.readthedocs.io/en/stable/dataframe_models.html
-#}
import pandera.polars as pla
from typing import Optional, List, Dict
from pandera.typing import (
    Index,
    DataFrame,
    Series
)
from pandera.engines.polars_engine import (
    DateTime,
    Date,
    Time,
    Enum
)

{% if metamodel_version %}# metamodel_version: {{metamodel_version}}{% endif %}
{% if model_version %}# version: {{model_version}}{% endif %}
{%- for doc in docs -%}
{% for cls in doc.classes %}

class {{cls.name}}({% if cls.is_a %}{{ cls.is_a }}{% else %}pla.DataFrameModel{% endif %}):
{%- if cls.source_class.description %}
    """
    {{ cls.source_class.description }}
    """
{% endif %}
{%- if (cls.fields | length) == 0 %}
    pass
{% endif -%}
{%- for field in cls.fields -%}
{%- with slot = field.source_slot %}
    {{ field.name }}:{{ ' ' }}
{%- if slot.required is none or slot.required is false %}Optional[{% endif -%}
{{field.range}}
{%- if slot.required is none or slot.required is false %}]{% endif -%}
{{ " =" }} pla.Field(
{%- if coerce is true -%}coerce=True, {% endif -%}
{%- if field.default_value is not none -%}default={{ field.default_value }}, {% endif -%}
{%- if slot.minimum_value is not none -%}ge={{ slot.minimum_value }}, {% endif -%}
{%- if slot.maximum_value is not none -%}le={{ slot.maximum_value }}, {% endif -%}
{%- if slot.pattern is not none -%}str_matches=r"{{ slot.pattern }}", {% endif -%}
{%- if slot.required is none or slot.required is false %}nullable=True, {% endif -%}
{%- if slot.annotations['permissible_values']|length > 0 -%}dtype_kwargs={"categories":(
{%- for pv in slot.annotations['permissible_values'] -%}
'{{ pv }}',
{%- endfor -%}
)}
{%- endif -%}
)
{%- if slot.description %}
    """{{ slot.description }}"""

{% endif -%}
{%- endwith -%}
{% endfor %}
{%- endfor %}
{%- endfor %}

